01. Generate Excel file with 100 000 rows with random generated data.
02.Factorial Calculator that calculates 1 000 000 times random factorials form 1 to 10.
03.Factorial Calculator that calculates 1 000 000 times random factorials form 1 to 10. - OPTIMIZED

First console application - Generate Excel file

The program generate Excel file with 100 000 rows of random generated data.
	Build with:
		.NET C#
	Used libraries to create and manage excel spreadsheeds: 
		EPPlus

	1. Program creates ExcelPackage.
	2. Add ExcelWorkSheet to package.
	3. Customize first header row.
		3.1. Set bold font style.
		3.2. Set pattern type to be solid.
		3.3. Set background color.
	4. Generates rows with random data and adds them to worksheet.
		4.1. Get random name from array.
		4.2. Get random age.
		4.3. Get random score.
		4.4. Add row in worksheet.
	5. Set font color to odd rows which has values.
	6. Add a formula to a cell. The formula calculates average value of the data from submitted first cell to submitted last cell.
	7. Save the file.

Second console application - Calculate 1 000 000 times factorial - unoptimized
	Biuld with:
		.NET C#
	
	1. Initialize stopwatch.
		1.1. Start stopwatch.
	2. Initialize factorial variable.
		2.1. Set factorial value to 1.
	3. Initialize random class.
	4. Start a loop with 1 000 000 rounds - external loop.
		4.1. Get random number from 1 to 10 - "number".
		4.2. Create a loop that has "number" value rounds. Start from 1. - internal loop
			4.2.1. On each round multiply the current factorial value to the number of the current round of the loop.
			save the value from the multiplying in factorial vaable.
 			And repeat this until the end of the internal loop. Then we have the value of the factorial(number). end of internal loop
	4.3. Set factorial value to 1. We set factorial to 1 because we will calculate new factorial. And repeat until the end of the external loop.
		 
	5. Stop stopwatch.
	6. Print execution time.

Third console application - Calculate 1 000 000 times factorial - optimized
	Build with:
		.NET C#
	Using dinamic optimization.
	
	1. Initialize static integer array for saving the calculated factorials.
	2. Start stopwatch.
	3. Initialize starting factorial value, random class, and num.
	4. Start a loop with 1 000 000 rounds.
		4.1. Get random number from 1 to 10.
		4.2. Call function that calculates factorial.
			4.2.1. If number is 1 - return 1.
			4.2.2. If we have already calculated the value of factorial(number) in the array - return this value.
			4.2.3. If we haven`t calculated value of the factorial(number), we calculate it and save the value in the array and return this value.
		4.3. Repeat this until the end of the loop.
	5. Stop stopwatch.
	6. Print execution time.
	

Author : Volen Aleksandrov

